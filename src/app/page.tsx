'use client';

import { useState } from 'react';
import Image from 'next/image';
import { Auth } from './components/Auth';
import { Register } from './components/Register';
import { DifficultySelect } from './components/DifficultySelect';
import { Rules } from './components/Rules';
import { SystemInfo } from './components/SystemInfo';
import { GameBoard } from './components/GameBoard';
import { Settings } from './components/Settings';

export default function Home() {
  const [activeScreen, setActiveScreen] = useState('about'); // about, singleplayer, createRoom, join, profile, rules, authors, system
  const [showSettings, setShowSettings] = useState(false);
  const [musicEnabled, setMusicEnabled] = useState(true);
  const [soundEnabled, setSoundEnabled] = useState(true);

  // –ú–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∏–≥—Ä—ã
  const mockPlayerBoard = Array(10).fill(0).map(() => Array(10).fill(0));
  const mockOpponentBoard = Array(10).fill(0).map(() => Array(10).fill(0));

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
  const handleLogin = (username: string, password: string) => {
    console.log('Login:', username, password);
  };

  const handleRegister = (username: string, password: string, avatar: number) => {
    console.log('Register:', username, password, avatar);
  };

  const handleCellClick = (x: number, y: number, isPlayerBoard: boolean) => {
    console.log('Cell clicked:', x, y, isPlayerBoard);
  };

  const handleDifficultySelect = (difficulty: 'easy' | 'medium' | 'hard') => {
    console.log('Difficulty selected:', difficulty);
  };

  // –†–µ–Ω–¥–µ—Ä –ø—Ä–∞–≤–æ–π —á–∞—Å—Ç–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞ –º–µ–Ω—é
  const renderRightSection = () => {
    switch (activeScreen) {
      case 'singleplayer':
        return <DifficultySelect onSelect={handleDifficultySelect} />;
      case 'createRoom':
        return (
          <div className="bg-gray-900/60 rounded-2xl p-6 text-white">
            <h2 className="text-2xl mb-4">–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–¥:</h2>
            <div className="flex items-center gap-2">
              <input
                type="text"
                value="758n7984hd9f84jre"
                readOnly
                className="flex-1 bg-white text-black py-2 px-4 rounded-lg"
              />
              <button className="bg-green-500 text-white py-2 px-4 rounded-lg hover:bg-green-600 transition">
                –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å
              </button>
            </div>
          </div>
        );
      case 'join':
        return (
          <div className="bg-gray-900/60 rounded-2xl p-6 text-white">
            <h2 className="text-2xl mb-4">–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –∫–æ–º–Ω–∞—Ç—ã:</h2>
            <div className="flex items-center gap-2">
              <input
                type="text"
                placeholder="–ö–æ–¥ –∫–æ–º–Ω–∞—Ç—ã"
                className="flex-1 bg-white text-black py-2 px-4 rounded-lg"
              />
              <button className="bg-green-500 text-white py-2 px-4 rounded-lg hover:bg-green-600 transition">
                –í–æ–π—Ç–∏
              </button>
            </div>
          </div>
        );
      case 'profile':
        return (
          <div className="bg-gray-900/60 rounded-2xl p-6 text-white">
            <h2 className="text-2xl mb-4">–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è</h2>
            <div className="space-y-4">
              <div>
                <p className="mb-2">–ê–≤–∞—Ç–∞—Ä:</p>
                <div className="grid grid-cols-5 gap-2">
                  {Array.from({ length: 10 }, (_, i) => (
                    <button
                      key={i}
                      className="w-12 h-12 rounded-lg bg-orange-400 hover:ring-2 hover:ring-blue-500"
                    >
                      <span className="text-xl">üòä</span>
                    </button>
                  ))}
                </div>
              </div>
              <div>
                <label className="block mb-2">–°–º–µ–Ω–∏—Ç—å –ª–æ–≥–∏–Ω:</label>
                <input
                  type="text"
                  className="w-full bg-white text-black py-2 px-4 rounded-lg"
                />
              </div>
              <div>
                <label className="block mb-2">–°—Ç–∞—Ä—ã–π –ø–∞—Ä–æ–ª—å:</label>
                <input
                  type="password"
                  className="w-full bg-white text-black py-2 px-4 rounded-lg mb-2"
                />
                <label className="block mb-2">–ù–æ–≤—ã–π –ø–∞—Ä–æ–ª—å:</label>
                <input
                  type="password"
                  className="w-full bg-white text-black py-2 px-4 rounded-lg mb-2"
                />
                <label className="block mb-2">–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–∞—Ä–æ–ª—å:</label>
                <input
                  type="password"
                  className="w-full bg-white text-black py-2 px-4 rounded-lg"
                />
              </div>
              <button className="w-full bg-green-500 text-white py-2 px-4 rounded-lg hover:bg-green-600 transition">
                –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è
              </button>
            </div>
          </div>
        );
      case 'rules':
        return <Rules />;
      case 'authors':
        return (
          <div className="bg-gray-900/60 rounded-2xl p-6 text-white">
            <h2 className="text-2xl mb-4">–û–± –∞–≤—Ç–æ—Ä–∞—Ö</h2>
            <div className="space-y-4">
              <h3 className="text-xl">–§—Ä–æ–Ω—Ç–µ–Ω–¥: –ü–∞—Ä—à–∏–Ω –ù–∏–∫–∏—Ç–∞</h3>
              <h3 className="text-xl">–ë—ç–∫—ç–Ω–¥: –õ—ã—Å–æ–≤ –ò–ª—å—è</h3>
              <h3 className="text-xl">–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: –õ–µ–±–µ–¥–µ–≤ –ï–≤–≥–µ–Ω–∏–π</h3>
            </div>
          </div>
        );
      case 'system':
        return <SystemInfo />;
      default:
        return (
          <div className="bg-gray-900/60 rounded-2xl p-6 text-white">
            <h2 className="text-2xl mb-4">–§—Ä–æ–Ω—Ç–µ–Ω–¥: –ü–∞—Ä—à–∏–Ω –ù–∏–∫–∏—Ç–∞</h2>
            <h2 className="text-2xl mb-4">–ë—ç–∫—ç–Ω–¥: –õ—ã—Å–æ–≤ –ò–ª—å—è</h2>
            <h2 className="text-2xl">–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: –õ–µ–±–µ–¥–µ–≤ –ï–≤–≥–µ–Ω–∏–π</h2>
          </div>
        );
    }
  };

  return (
    <main className="min-h-screen flex flex-col items-center justify-center bg-gradient-to-b from-sky-300 to-sky-500">
      <div className="relative w-full max-w-4xl">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏–≥—Ä—ã */}
        <h1 className="text-6xl font-bold text-yellow-400 text-center mb-8 tracking-wider drop-shadow-lg">
          –ú–û–†–°–ö–û–ô –ë–û–ô
          <div className="absolute top-0 left-1/2 -translate-x-1/2 w-full flex justify-center">
            <div className="relative w-64 h-12">
              <Image
                src="/images/battleships.png"
                alt="Battleships"
                width={200}
                height={50}
                className="opacity-25"
              />
            </div>
          </div>
        </h1>

        {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä */}
        <div className="bg-gray-800/70 rounded-3xl p-8 backdrop-blur-sm shadow-xl">
          {/* –ú–µ–Ω—é —Å–ª–µ–≤–∞ –∏ –∫–æ–Ω—Ç–µ–Ω—Ç —Å–ø—Ä–∞–≤–∞ */}
          <div className="flex gap-8">
            {/* –ú–µ–Ω—é —Å–ª–µ–≤–∞ */}
            <div className="bg-gray-900/80 rounded-2xl p-4 space-y-2 w-64 flex-shrink-0">
              <button 
                onClick={() => setActiveScreen('singleplayer')}
                className={`w-full text-white py-2 px-4 rounded-lg hover:bg-gray-700 transition ${activeScreen === 'singleplayer' ? 'bg-gray-700' : ''}`}>
                –û–¥–∏–Ω–æ—á–Ω–∞—è –∏–≥—Ä–∞
              </button>
              <button 
                onClick={() => setActiveScreen('createRoom')}
                className={`w-full text-white py-2 px-4 rounded-lg hover:bg-gray-700 transition ${activeScreen === 'createRoom' ? 'bg-gray-700' : ''}`}>
                –°–æ–∑–¥–∞—Ç—å –∫–æ–º–Ω–∞—Ç—É
              </button>
              <button 
                onClick={() => setActiveScreen('join')}
                className={`w-full text-white py-2 px-4 rounded-lg hover:bg-gray-700 transition ${activeScreen === 'join' ? 'bg-gray-700' : ''}`}>
                –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è
              </button>
              <button 
                onClick={() => setActiveScreen('profile')}
                className={`w-full text-white py-2 px-4 rounded-lg hover:bg-gray-700 transition ${activeScreen === 'profile' ? 'bg-gray-700' : ''}`}>
                –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å
              </button>
              <button 
                onClick={() => setActiveScreen('rules')}
                className={`w-full text-white py-2 px-4 rounded-lg hover:bg-gray-700 transition ${activeScreen === 'rules' ? 'bg-gray-700' : ''}`}>
                –ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã
              </button>
              <button 
                onClick={() => setActiveScreen('authors')}
                className={`w-full text-white py-2 px-4 rounded-lg hover:bg-gray-700 transition ${activeScreen === 'authors' ? 'bg-gray-700' : ''}`}>
                –û–± –∞–≤—Ç–æ—Ä–∞—Ö
              </button>
              <button 
                onClick={() => setActiveScreen('system')}
                className={`w-full text-white py-2 px-4 rounded-lg hover:bg-gray-700 transition ${activeScreen === 'system' ? 'bg-gray-700' : ''}`}>
                –û —Å–∏—Å—Ç–µ–º–µ
              </button>
            </div>

            {/* –û—Å–Ω–æ–≤–Ω–∞—è –æ–±–ª–∞—Å—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç–∞ - —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–∞–∑–º–µ—Ä */}
            <div className="flex-1 min-h-[400px] min-w-[500px]">
              {renderRightSection()}
            </div>
          </div>
        </div>
      </div>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–∫ */}
      {showSettings && (
        <Settings
          onClose={() => setShowSettings(false)}
          musicEnabled={musicEnabled}
          soundEnabled={soundEnabled}
          onMusicToggle={() => setMusicEnabled(!musicEnabled)}
          onSoundToggle={() => setSoundEnabled(!soundEnabled)}
        />
      )}
    </main>
  );
}
