'use client';

import { useState, useEffect } from 'react';
import Image from 'next/image';
import { Auth } from './components/Auth';
import { Register } from './components/Register';
import { DifficultySelect } from './components/DifficultySelect';
import { Rules } from './components/Rules';
import { SystemInfo } from './components/SystemInfo';
import { GameBoard } from './components/GameBoard';
import { Settings } from './components/Settings';
import { LobbyList } from './components/LobbyList';
import { CreateLobby } from './components/CreateLobby';
import { LobbyView } from './components/LobbyView';
import { authService, User, AuthError } from './services/authService';

export default function Home() {
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
  const [isAuthenticated, setIsAuthenticated] = useState(false);
  const [isLoading, setIsLoading] = useState(true);
  const [authScreen, setAuthScreen] = useState<'login' | 'register'>('login');
  const [user, setUser] = useState<User | null>(null);
  const [authError, setAuthError] = useState<string | null>(null);
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ UI
  const [activeScreen, setActiveScreen] = useState('about'); // about, singleplayer, multiPlayer, profile, rules, authors, system
  const [showSettings, setShowSettings] = useState(false);
  const [musicEnabled, setMusicEnabled] = useState(true);
  const [soundEnabled, setSoundEnabled] = useState(true);
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –ª–æ–±–±–∏
  const [lobbyView, setLobbyView] = useState<'list' | 'create' | 'view'>('list');
  const [activeLobbyId, setActiveLobbyId] = useState<string | null>(null);
  const [inGame, setInGame] = useState(false);
  
  // –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –∏–Ω–ø—É—Ç–æ–≤
  const [roomCode, setRoomCode] = useState('');
  const [joinRoomCode, setJoinRoomCode] = useState('');
  const [username, setUsername] = useState('');
  const [oldPassword, setOldPassword] = useState('');
  const [newPassword, setNewPassword] = useState('');
  const [confirmPassword, setConfirmPassword] = useState('');
  const [selectedAvatar, setSelectedAvatar] = useState(0);

  // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
  useEffect(() => {
    const checkAuth = () => {
      const isAuth = authService.isAuthenticated();
      setIsAuthenticated(isAuth);
      
      if (isAuth) {
        setUser(authService.getUser());
      }
      
      setIsLoading(false);
    };
    
    checkAuth();
  }, []);

  // –ú–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∏–≥—Ä—ã
  const mockPlayerBoard = Array(10).fill(0).map(() => Array(10).fill(0));
  const mockOpponentBoard = Array(10).fill(0).map(() => Array(10).fill(0));

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
  const handleLogin = async (username: string, password: string) => {
    setAuthError(null); // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â—É—é –æ—à–∏–±–∫—É
    try {
      const result = await authService.login(username, password);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ—à–∏–±–∫–æ–π
      if (typeof result === 'object' && 'message' in result) {
        setAuthError(result.message);
        return false;
      }
      
      // –ï—Å–ª–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞
      const userData = authService.getUser();
      setUser(userData);
      setIsAuthenticated(true);
      return true;
    } catch (error) {
      console.error('Login failed:', error);
      setAuthError('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—Ö–æ–¥–µ');
      return false;
    }
  };

  const handleRegister = async (username: string, password: string, avatar: number) => {
    setAuthError(null); // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â—É—é –æ—à–∏–±–∫—É
    try {
      const result = await authService.register(username, password, avatar);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ—à–∏–±–∫–æ–π
      if (typeof result === 'object' && 'message' in result) {
        setAuthError(result.message);
        return false;
      }
      
      // –ï—Å–ª–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞, –≤—ã–ø–æ–ª–Ω—è–µ–º –≤—Ö–æ–¥
      const loginSuccess = await handleLogin(username, password);
      return loginSuccess;
    } catch (error) {
      console.error('Registration failed:', error);
      setAuthError('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏');
      return false;
    }
  };

  const handleLogout = () => {
    authService.logout();
    setIsAuthenticated(false);
    setUser(null);
    setActiveScreen('about');
    setLobbyView('list');
    setActiveLobbyId(null);
    setInGame(false);
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ UI
  const handleCellClick = (x: number, y: number, isPlayerBoard: boolean) => {
    console.log('Cell clicked:', x, y, isPlayerBoard);
  };

  const handleDifficultySelect = (difficulty: 'easy' | 'medium' | 'hard') => {
    console.log('Difficulty selected:', difficulty);
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –ª–æ–±–±–∏
  const handleCreateLobby = () => {
    setActiveScreen('multiPlayer');
    setLobbyView('create');
  };

  const handleLobbyCreated = (lobbyId: string) => {
    setActiveLobbyId(lobbyId);
    setLobbyView('view');
  };

  const handleJoinLobby = (lobbyId: string) => {
    setActiveLobbyId(lobbyId);
    setLobbyView('view');
  };

  const handleLeaveLobby = () => {
    setActiveLobbyId(null);
    setLobbyView('list');
    setInGame(false);
  };

  const handleStartGame = () => {
    setInGame(true);
  };

  // –†–µ–Ω–¥–µ—Ä –ø—Ä–∞–≤–æ–π —á–∞—Å—Ç–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞ –º–µ–Ω—é
  const renderRightSection = () => {
    switch (activeScreen) {
      case 'singleplayer':
        return <DifficultySelect onSelect={handleDifficultySelect} />;
      
      case 'multiPlayer':
        if (inGame) {
          return (
            <div className="bg-gray-800/70 rounded-2xl p-6 text-white">
              <div className="flex justify-between items-center mb-6">
                <h2 className="text-2xl font-bold">–ò–≥—Ä–∞</h2>
                <button
                  onClick={handleLeaveLobby}
                  className="px-4 py-2 bg-red-500 rounded-lg hover:bg-red-600 transition"
                >
                  –ü–æ–∫–∏–Ω—É—Ç—å –∏–≥—Ä—É
                </button>
              </div>
              <GameBoard
                playerName={user?.username || "–í—ã"}
                opponentName="–ü—Ä–æ—Ç–∏–≤–Ω–∏–∫"
                playerBoard={mockPlayerBoard}
                opponentBoard={mockOpponentBoard}
                onCellClick={handleCellClick}
              />
            </div>
          );
        } else {
          if (lobbyView === 'list') {
            return (
              <LobbyList 
                onJoinLobby={handleJoinLobby} 
                onCreateLobby={handleCreateLobby} 
              />
            );
          } else if (lobbyView === 'create') {
            return (
              <CreateLobby 
                onLobbyCreated={handleLobbyCreated} 
                onCancel={() => setLobbyView('list')} 
              />
            );
          } else if (lobbyView === 'view' && activeLobbyId) {
            return (
              <LobbyView 
                lobbyId={activeLobbyId} 
                onStartGame={handleStartGame} 
                onLeaveLobby={handleLeaveLobby} 
              />
            );
          }
        }
        return null;
        
      case 'profile':
        return (
          <div className="bg-gray-800/70 rounded-2xl p-6 text-white">
            <h2 className="text-2xl mb-4">–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è</h2>
            <div className="space-y-4">
              <div>
                <p className="mb-2">–ê–≤–∞—Ç–∞—Ä:</p>
                <div className="grid grid-cols-5 gap-2">
                  {Array.from({ length: 10 }, (_, i) => (
                    <button
                      key={i}
                      onClick={() => setSelectedAvatar(i)}
                      className={`w-12 h-12 rounded-lg bg-orange-400 hover:ring-2 hover:ring-blue-500 ${
                        selectedAvatar === i ? 'ring-2 ring-blue-500' : ''
                      }`}
                    >
                      <span className="text-xl">üòä</span>
                    </button>
                  ))}
                </div>
              </div>
              <div>
                <label className="block mb-2">–°–º–µ–Ω–∏—Ç—å –ª–æ–≥–∏–Ω:</label>
                <input
                  type="text"
                  value={username}
                  onChange={(e) => setUsername(e.target.value)}
                  className="w-full bg-white text-black py-2 px-4 rounded-lg"
                />
              </div>
              <div>
                <label className="block mb-2">–°—Ç–∞—Ä—ã–π –ø–∞—Ä–æ–ª—å:</label>
                <input
                  type="password"
                  value={oldPassword}
                  onChange={(e) => setOldPassword(e.target.value)}
                  className="w-full bg-white text-black py-2 px-4 rounded-lg mb-2"
                />
                <label className="block mb-2">–ù–æ–≤—ã–π –ø–∞—Ä–æ–ª—å:</label>
                <input
                  type="password"
                  value={newPassword}
                  onChange={(e) => setNewPassword(e.target.value)}
                  className="w-full bg-white text-black py-2 px-4 rounded-lg mb-2"
                />
                <label className="block mb-2">–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å:</label>
                <input
                  type="password"
                  value={confirmPassword}
                  onChange={(e) => setConfirmPassword(e.target.value)}
                  className="w-full bg-white text-black py-2 px-4 rounded-lg"
                />
              </div>
              <div>
                <button className="w-full bg-green-500 text-white py-2 px-4 rounded-lg hover:bg-green-600 transition">
                  –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è
                </button>
              </div>
            </div>
          </div>
        );
      case 'rules':
        return <Rules />;
      case 'authors':
        return (
          <div className="bg-gray-800/70 rounded-2xl p-6 text-white">
            <h2 className="text-2xl mb-4">–û–± –∞–≤—Ç–æ—Ä–∞—Ö</h2>
            <div className="space-y-4">
              <ul className="list-disc pl-5 space-y-2">
                <li><a href="https://github.com/SecurityTrip" className="text-blue-400 hover:underline" target="_blank" rel="noopener noreferrer">SecurityTrip</a></li>
                <li><a href="https://github.com/F4NTOM41K" className="text-blue-400 hover:underline" target="_blank" rel="noopener noreferrer">F4NTOM41K</a></li>
                <li><a href="https://github.com/Withotic" className="text-blue-400 hover:underline" target="_blank" rel="noopener noreferrer">Withotic</a></li>
              </ul>
            </div>
          </div>
        );
      case 'system':
        return <SystemInfo />;
      default:
        return (
          <div className="bg-gray-800/70 rounded-2xl p-6 text-white">
            <h2 className="text-2xl mb-4">–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∏–≥—Ä—É "–ú–æ—Ä—Å–∫–æ–π –ë–æ–π"</h2>
            <p className="mb-4">
              –ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –∏–≥—Ä–∞ "–ú–æ—Ä—Å–∫–æ–π –ë–æ–π" –≤ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–º –∏—Å–ø–æ–ª–Ω–µ–Ω–∏–∏. –ò–≥—Ä–∞–π—Ç–µ –ø—Ä–æ—Ç–∏–≤ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞ –∏–ª–∏ —Å—Ä–∞–∑–∏—Ç–µ—Å—å —Å –¥—Ä—É–≥–∏–º–∏ –∏–≥—Ä–æ–∫–∞–º–∏ –æ–Ω–ª–∞–π–Ω.
            </p>
            <p className="mb-4">
              –£–ø—Ä–∞–≤–ª—è–π—Ç–µ —Ñ–ª–æ—Ç–æ–º, —Å—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–∏ —Ä–∞–∑–º–µ—â–∞–π—Ç–µ –∫–æ—Ä–∞–±–ª–∏ –∏ —É–Ω–∏—á—Ç–æ–∂–∞–π—Ç–µ –≤—Ä–∞–∂–µ—Å–∫–∏–µ —Å—É–¥–∞. –ü–æ–±–µ–¥–∏—Ç —Ç–æ—Ç, –∫—Ç–æ –ø–µ—Ä–≤—ã–º –ø–æ—Ç–æ–ø–∏—Ç –≤–µ—Å—å —Ñ–ª–æ—Ç –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞!
            </p>
            <div className="grid grid-cols-2 gap-4 mt-6">
              <button
                onClick={() => setActiveScreen('singleplayer')}
                className="p-4 bg-blue-500 rounded-lg hover:bg-blue-600 transition"
              >
                –û–¥–∏–Ω–æ—á–Ω–∞—è –∏–≥—Ä–∞
              </button>
              <button
                onClick={() => {
                  setActiveScreen('multiPlayer');
                  setLobbyView('list');
                }}
                className="p-4 bg-green-500 rounded-lg hover:bg-green-600 transition"
              >
                –ú–Ω–æ–≥–æ–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è –∏–≥—Ä–∞
              </button>
            </div>
          </div>
        );
    }
  };

  // –ü–æ–∫–∞–∑ —ç–∫—Ä–∞–Ω–æ–≤ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
  if (!isAuthenticated) {
    return (
      <main className="min-h-screen flex flex-col items-center justify-center bg-gradient-to-b from-sky-300 to-sky-500">
        {authScreen === 'login' ? (
          <Auth 
            onLogin={handleLogin} 
            onRegisterClick={() => setAuthScreen('register')} 
            error={authError}
          />
        ) : (
          <Register 
            onRegister={handleRegister} 
            onLoginClick={() => setAuthScreen('login')} 
            error={authError}
          />
        )}
      </main>
    );
  }

  // –ü–æ–∫–∞–∑ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
  return (
    <main className="min-h-screen flex flex-col items-center justify-center bg-gradient-to-b from-sky-300 to-sky-500">
      <div className="relative w-full max-w-4xl">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏–≥—Ä—ã */}
        <h1 className="text-6xl font-bold text-yellow-400 text-center mb-8 tracking-wider drop-shadow-lg">
          –ú–û–†–°–ö–û–ô –ë–û–ô
          <div className="absolute top-0 left-1/2 -translate-x-1/2 w-full flex justify-center">
            <div className="relative w-64 h-12">
              {/* –í—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–∏–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–æ—Ä–∞–±–ª—è */}
              {/* <Image
                src="/images/battleships.png"
                alt="Battleships"
                width={200}
                height={50}
                className="opacity-25"
              /> */}
            </div>
          </div>
        </h1>

        {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä */}
        <div className="bg-gray-800/70 rounded-3xl p-8 backdrop-blur-sm shadow-xl">
          {/* –ú–µ–Ω—é —Å–ª–µ–≤–∞ –∏ –∫–æ–Ω—Ç–µ–Ω—Ç —Å–ø—Ä–∞–≤–∞ */}
          <div className="flex gap-8">
            {/* –ú–µ–Ω—é —Å–ª–µ–≤–∞ */}
            <div className="bg-gray-900/80 rounded-2xl p-4 space-y-2 w-64 flex-shrink-0">
              <button 
                onClick={() => {
                  setActiveScreen('singleplayer');
                }}
                className={`w-full text-white py-2 px-4 rounded-lg hover:bg-gray-700 transition ${activeScreen === 'singleplayer' ? 'bg-gray-700' : ''}`}>
                –û–¥–∏–Ω–æ—á–Ω–∞—è –∏–≥—Ä–∞
              </button>
              <button 
                onClick={() => {
                  setActiveScreen('multiPlayer');
                  setLobbyView('list');
                  setInGame(false);
                }}
                className={`w-full text-white py-2 px-4 rounded-lg hover:bg-gray-700 transition ${activeScreen === 'multiPlayer' ? 'bg-gray-700' : ''}`}>
                –ú–Ω–æ–≥–æ–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è –∏–≥—Ä–∞
              </button>
              <button 
                onClick={() => setActiveScreen('profile')}
                className={`w-full text-white py-2 px-4 rounded-lg hover:bg-gray-700 transition ${activeScreen === 'profile' ? 'bg-gray-700' : ''}`}>
                –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å
              </button>
              <button 
                onClick={() => setActiveScreen('rules')}
                className={`w-full text-white py-2 px-4 rounded-lg hover:bg-gray-700 transition ${activeScreen === 'rules' ? 'bg-gray-700' : ''}`}>
                –ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã
              </button>
              <button 
                onClick={() => setActiveScreen('authors')}
                className={`w-full text-white py-2 px-4 rounded-lg hover:bg-gray-700 transition ${activeScreen === 'authors' ? 'bg-gray-700' : ''}`}>
                –û–± –∞–≤—Ç–æ—Ä–∞—Ö
              </button>
              <button 
                onClick={() => setActiveScreen('system')}
                className={`w-full text-white py-2 px-4 rounded-lg hover:bg-gray-700 transition ${activeScreen === 'system' ? 'bg-gray-700' : ''}`}>
                –û —Å–∏—Å—Ç–µ–º–µ
              </button>
              <button 
                onClick={handleLogout}
                className="w-full text-white py-2 px-4 rounded-lg bg-red-600 hover:bg-red-700 transition mt-4">
                –í—ã–π—Ç–∏
              </button>
            </div>

            {/* –û—Å–Ω–æ–≤–Ω–∞—è –æ–±–ª–∞—Å—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç–∞ - —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–∞–∑–º–µ—Ä */}
            <div className="flex-1 min-h-[400px] min-w-[500px]">
              {renderRightSection()}
            </div>
          </div>
        </div>
      </div>
      
      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–∫ */}
      {showSettings && (
        <Settings
          onClose={() => setShowSettings(false)}
          musicEnabled={musicEnabled}
          soundEnabled={soundEnabled}
          onMusicToggle={() => setMusicEnabled(!musicEnabled)}
          onSoundToggle={() => setSoundEnabled(!soundEnabled)}
        />
      )}
    </main>
  );
}